@model Models.Role.QueryFormModel
@{
    ViewBag.Title = "Index";
}

@section Styles
{
    <link href="@Url.Content("~/Content/tree.css")" rel="stylesheet" />
}

@section Scripts
{
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/validator.parseDynamicContent.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.jstree.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/js/jquery.dataTables.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/js/jquery.dataTables.bootstrap.js")"></script>
    <script type="text/javascript">
        //Start
    $(function () {
        Query();

        $('#Parameters_Keyword').keydown(function (event) {
            if (event.which === 13) {
                Query();
                return false;
            }
        });
    });

    let Query = function () {
        $('#divForm').empty().hide();
        $('#divQueryForm').show();//Search form

        let grid = $('#divList');

        $.ajax({
            type: "GET",
            cache: false,
            url: '@Url.Action("Query")',
            data: $('#QueryForm').serialize(),//Parameters to the method Query() of RoleController.If no keywords in the search form,parameters will be null.
            dataType: "html",
            beforeSend: function () { grid.Overlay('show'); },
            success: function (data) { grid.Overlay('hide').html(data); },
            error: function (x, h, r) { grid.Overlay('hide').html(x.responseText); }
        });
    };

    let Form = function (url, data) {
        $('#divQueryForm').hide();

        let form = $('#divForm');

        form.empty().show();

        $.ajax({
            type: "GET",
            cache: false,
            url: url,
            data: data,
            dataType: "html",
            beforeSend: function () { form.Overlay('show'); },
            success: function (data) { form.Overlay('show').html(data); },
            error: function (x, h, r) { form.Overlay('hide').html(x.responseText); }
        });
    };

    let Detail = function (roleId) {
        Form('@Url.Action("Detail")', { roleId: roleId });
    };

        let Create = function () {
        Form('@Url.Action("Create")');
    };

        let Copy = function (roleId) {
            Form('@Url.Action("Copy")', { roleId: roleId });
    };

        let Edit = function (roleId) {
            Form('@Url.Action("Edit")', { roleId: roleId });
    };

        let Delete = function (roleId) {
        $.ConfirmDialog('@string.Format("{0} {1} ?", Resources.Resource.Confirm, Resources.Resource.Delete)', function (confirmed) {
            if (confirmed) {
                $.ajax({
                    type: "POST",
                    cache: false,
                    url: '@Url.Action("Delete")',
                    data: { roleId: roleId },
                    dataType: "json",
                    beforeSend: function () { $.Overlay('show'); },
                    success: function (data) {
                        $.Overlay('hide');

                        if (data.IsSuccess) {
                            Query();
                            $.SuccessDialog(data.Message);
                        }
                        else {
                            $.ErrorDialog(data.Message);
                        }
                    },
                    error: function (x, h, r) {
                        $.Overlay('hide');
                        $.ErrorDialog(x.responseText);
                    }
                });
            }
        });
    };
    </script>
}
<div class="row">
    <div id="divQueryForm" class="col-xs-12">
        <p>
            @if (ViewBag.CanCreate)
            {
                <button class="btn btn-app btn-primary btn-xs" onclick="Create();" type="button">
                    <i class="ace-icon fa fa-plus bigger-160"></i>
                    @Resources.Resource.Create
                </button>
            }
        </p>
        @using (Html.BeginForm("Query", null, FormMethod.Post, new { @ID = "QueryForm" }))
        {
            <p>
                <div class="input-group">
                    <span class="input-group-addon" style="cursor:pointer;" onclick="Query();">
                        <i class="fa fa-search bigger-110"></i>
                    </span>
                    @Html.TextBoxFor(x => x.Parameters.Keyword, new { @class = "form-control" })
                </div>
            </p>
        }
        <div id="divList" style="min-height:200px;"></div>
    </div>
    <div id="divForm" style="min-height:200px;" class="col-xs-12"></div>
</div>


